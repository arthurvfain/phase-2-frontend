{"version":3,"sources":["Components/Header.js","Components/BattlerCard.js","Components/Fight.js","Components/Victory.js","Components/BattleField.js","Components/PokeCard.js","Components/Filter.js","Components/PokemonContainer.js","Components/WarriorCard.js","Components/Warriors.js","Components/Coliseum.js","Components/HallOfFameCard.js","Components/HallOfFame.js","Components/Home.js","Components/App.js","reportWebVitals.js","index.js"],"names":["Header","style","backgroundImage","backgroundSize","backgroundPositionY","src","alt","paddingTop","paddingBottom","Chip","component","NavLink","to","exact","label","clickable","color","avatar","Avatar","BattlerCard","name","id","position","wins","Card","fontFamily","toUpperCase","height","width","Fight","battlers","contestants","warriors","pokeList","setPokemon","Grid","container","spacing","justify","map","battler","item","xs","sm","parseFloat","url","slice","indexOf","Link","onClick","random","Math","winner","Victory","BattleField","battlerz","useEffect","daWinna","battleTime","Date","now","fetch","method","headers","body","JSON","stringify","length","splice","path","PokeCard","selectWarrior","margin","useStyles","makeStyles","theme","root","display","small","Filter","filterInput","handleSearch","classes","TextField","backgroundColor","borderRadius","value","onChange","InputProps","disableUnderline","startAdornment","InputAdornment","className","PokemonContainer","useState","setFilterInput","pokeCards","filter","element","toLowerCase","includes","pokemon","backgroundAttachment","e","target","WarriorCard","returnHome","Warriors","warriorCards","Coliseum","selectedWarrior","warriorList","removedFromCollection","then","r","json","data","results","remaining","removedCard","HallOfFameCard","variant","HallOfFame","previousWinners","setPreviousWinners","res","simpleWinners","winners","forEach","some","find","push","sort","a","b","Home","border","autoPlay","title","frameBorder","allow","allowFullScreen","App","exactPath","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4528272b.chunk.js","sourcesContent":["import Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header () {\n    return(    \n        <header style={{backgroundImage: `url(\"https://ssb.wiki.gallery/images/7/73/SSBU-Pok%C3%A9mon_Stadium.png\")`, backgroundSize: `100%`, backgroundPositionY: `65%` }}> \n            <img src='https://fontmeme.com/permalink/210624/f76e565b296fd522a525e1f734845036.png' alt='battleStage' style={{paddingTop: `10px`,paddingBottom: `100px`}}/>\n            <nav>\n                <Chip component={NavLink} to='/Coliseum' exact label=\"To Coliseum!\" clickable color=\"primary\" avatar={<Avatar alt=\"poke\" src=\"https://jenessa-reika.ca/wp-content/uploads/2020/04/pokemon2.png\" />}/>\n                <Chip component={NavLink} to='/HallOfFame' exact label=\"To Hall Of Fame!\" clickable color=\"primary\" avatar={<Avatar alt=\"poke\" src=\"https://e7.pngegg.com/pngimages/7/208/png-clipart-poke-ball-pokemon-gold-and-silver-pokemon-orange-logo.png\" />}/>\n            </nav>\n            <hr/>\n        </header>\n        \n    )\n}\nexport default Header","import { Card } from '@material-ui/core'\n\nfunction BattlerCard ({name, id, position, wins}) {\n    return (\n        <Card>\n            <h3 style={{fontFamily:'Cinzel'}}>{name.toUpperCase()}</h3>\n            <img src={position === 0 ?`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/${id}.png`:`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt={name} height= '40%' width= '40%'/>\n        </Card>\n    )\n\n}\nexport default BattlerCard","import { Grid } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport BattlerCard from \"./BattlerCard\"\nimport { Chip, Avatar } from '@material-ui/core';\n\nfunction Fight({contestants, warriors, pokeList, setPokemon})\n{\n    function displayBattle(battlers)\n    {\n        let twoCards = battlers.map(battler => \n            <Grid item xs={6} sm={3} key={battler.name}>\n                <BattlerCard name={battler.name} id={parseFloat(battler.url.slice(34))} position={battlers.indexOf(battler)} />\n            </Grid>\n        )\n        return(twoCards)\n    }\n    \n    function theBattle()\n    {\n        let random = Math.random()\n        if (random > .5)\n        {\n            setPokemon({battlers: [], warriors:[...warriors],pokeList:[...pokeList, ...contestants], winner: [contestants[0]]})\n        } else {\n            setPokemon({battlers: [], warriors:[...warriors],pokeList:[...pokeList, ...contestants], winner: [contestants[1]]})\n        }\n    }\n\n    return (\n        <div>\n            <Grid container spacing={2} justify= 'center'>\n                {displayBattle(contestants)}\n            </Grid>\n            <Chip component={Link} onClick={theBattle} to='/Victory' exact label=\"Fight!\" clickable color=\"primary\" avatar={<Avatar alt=\"poke\" src=\"https://jenessa-reika.ca/wp-content/uploads/2020/04/pokemon2.png\" />}/>\n        </div>\n    )\n}\n\nexport default Fight;","import { Card, Grid } from \"@material-ui/core\";\nfunction Victory({winner})\n{\n    let id = parseFloat(winner.url.slice(34))\n    return (\n        <div>\n            <h1 style={{fontFamily:'Cinzel'}}>The Winner is</h1>\n            <Card style={{backgroundImage: 'url(https://cdn1.vectorstock.com/i/1000x1000/92/35/fireworks-arc-on-starry-night-sky-vector-31919235.jpg)', backgroundPositionY: `50%`}}>\n                <h1 style={{fontFamily:'Cinzel', color: 'white'}}>{winner.name.toUpperCase()}</h1>\n                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt={winner.name} height= '10%' width='10%'/>\n                <br/>\n            </Card>\n        </div>\n    )\n}\n\nexport default Victory;","import React from \"react\"\nimport {  useEffect } from \"react\"\nimport { Route, Switch, Link } from 'react-router-dom'\nimport Fight from \"./Fight\"\nimport Victory from \"./Victory\"\nimport { Chip, Avatar } from '@material-ui/core';\n\nfunction BattleField({battlers, warriors, pokeList, setPokemon, winner}) {\n\n    let battlerz = []\n\n    function battle()\n    {   \n        battlerz = (warriors.splice(0,2))\n        setPokemon({battlers: battlerz, warriors:[...warriors],pokeList:[...pokeList]})\n    } \n\n    useEffect (()=>{\n        if (winner) {\n            let daWinna={name: winner[0].name, url:winner[0].url, battleTime:Date.now() }  \n            fetch('http://localhost:3000/battles',\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify(daWinna)\n            })\n        }\n    },[winner])\n    \n    return (\n        <div>\n            <h1 style={{fontFamily:'Cinzel'}}>BattleField</h1>\n            {warriors.length >= 2 ? <Chip component={Link} onClick={battle} to='/Fight' exact label=\"Get Ready!\" clickable color=\"primary\" avatar={<Avatar alt=\"poke\" src=\"https://jenessa-reika.ca/wp-content/uploads/2020/04/pokemon2.png\" />}/> : ''}\n            <Switch>\n                <Route path=\"/Fight\" component={()=><Fight contestants={battlers} pokeList={pokeList} warriors={warriors} setPokemon={setPokemon} />}/>\n                <Route path=\"/Victory\" component={()=><Victory winner={winner[0]}/>}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default BattleField","import {Card, Chip, Avatar} from '@material-ui/core'\n\nfunction PokeCard({name, id, selectWarrior}) {\n\n\n\n    function handleClick()\n    {\n        selectWarrior(name)\n    }\n\n     return (\n        <Card style={{margin: '10px'}}>      \n            <h3 style={{fontFamily:'Cinzel'}}>{name.toUpperCase()}</h3>\n            <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt={name} />\n            <br/>\n            <Chip onClick={handleClick} label=\"Send Poke to Battle\" clickable color=\"primary\" avatar={<Avatar alt=\"poke\" src=\"https://pngimg.com/uploads/pokeball/pokeball_PNG8.png\" />}/>\n        </Card>\n    )\n}\n\nexport default PokeCard;","import {TextField, Avatar, InputAdornment } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n  }));\n\nfunction Filter({filterInput, handleSearch}) {\n\n    const classes = useStyles();\n   \n    return (\n        <form>\n            {/* <TextField style={{backgroundColor: 'white', borderRadius: '5px'}} id=\"outlined-basic\" label=\"PokéSearch\" InputProps={{disableUnderline: true, }}  value={filterInput} onChange={handleSearch} /> */}\n            <TextField style={{backgroundColor: 'white', borderRadius: '5px'}} label=\"PokéSearch\" value={filterInput} onChange={handleSearch} InputProps={{disableUnderline: true, startAdornment: (<InputAdornment position=\"start\"><Avatar className={classes.small} alt=\"poke\" src=\"https://jenessa-reika.ca/wp-content/uploads/2020/04/pokemon2.png\" /></InputAdornment>),}}/>\n        </form>\n    )\n}\nexport default Filter","import Grid from '@material-ui/core/Grid';\nimport PokeCard from \"./PokeCard\"\nimport Filter from './Filter';\nimport { useState } from \"react\"\n\nfunction PokemonContainer({ pokeList, selectWarrior })\n{\n    const [filterInput, setFilterInput] = useState(\"\")\n\n    function handleSearch (e) {\n        setFilterInput(e.target.value)\n    }\n\n    let filterList = pokeList.filter(element => element.name.toLowerCase().includes(filterInput.toLowerCase()))  \n    let pokeCards = filterList.map((pokemon)=>\n    <Grid  item xs={6} sm={3} key={pokemon.name}>\n        <PokeCard id={parseFloat(pokemon.url.slice(34))} name={pokemon.name} selectWarrior={selectWarrior}/>\n    </Grid>)\n    \n    return (\n        <div style={{backgroundImage: 'url(https://pics.freeartbackgrounds.com/Desert_Sand_Texture-1203.jpg)', backgroundSize: `100%`, backgroundAttachment: 'fixed'}}>\n            <h1 style={{fontFamily:'Cinzel'}}>Pokemon Warriors</h1>\n            <Filter handleSearch={handleSearch} filterInput={filterInput}/>\n            <hr/>\n            <Grid container spacing={11}>\n                {pokeCards}\n            </Grid>\n        </div>\n    )\n}\n\nexport default PokemonContainer","import {Card} from '@material-ui/core'\nimport { Chip } from '@material-ui/core';\nimport { Avatar } from '@material-ui/core';\n\nfunction WarriorCard({name, id, returnHome}) {\n\n    function handleClick(e)\n    {\n        returnHome(name)\n    }\n\n     return (\n        <Card>\n        <h3 style={{fontFamily:'Cinzel'}}>{name.toUpperCase()}</h3>\n        <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt={name} />\n        <br/>\n        <Chip onClick={handleClick} label=\"Return Home\" clickable color=\"primary\" avatar={<Avatar alt=\"poke\" src=\"https://pngimg.com/uploads/pokeball/pokeball_PNG8.png\" />} />\n        </Card>\n    )\n}\n\nexport default WarriorCard;","import Grid from '@material-ui/core/Grid';\nimport WarriorCard from './WarriorCard';\n\nfunction Warriors({warriors, returnHome})\n{\n    \n    let warriorCards = warriors.map((pokemon)=> \n\n    <Grid item xs={6} sm={3} key={pokemon.name}>\n        <WarriorCard id={parseFloat(pokemon.url.slice(34))} name={pokemon.name} url={pokemon.url} returnHome={returnHome}/>\n    </Grid>\n    )\n    return (\n        <div>\n            {warriors.length % 2 === 0 && warriors.length !== 0 ? <h4 style={{fontFamily:'Cinzel'}}>Ready for Battle!</h4> : <h4 style={{fontFamily:'Cinzel'}}> Choose More Warriors</h4>}\n            <Grid container spacing={3}>\n                {warriorCards}\n            </Grid>\n        </div>\n    )\n}\nexport default Warriors","import { Route, Switch, NavLink } from 'react-router-dom'\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { useState, useEffect } from 'react'\nimport BattleField from './BattleField';\nimport PokemonContainer from './PokemonContainer';\nimport Warriors from './Warriors';\nimport { Chip, Avatar } from '@material-ui/core';\n\nfunction Coliseum()\n{\n    const[pokemon, setPokemon] = useState({battlers:[],warriors:[],pokeList:[], winner:[]})\n\n    useEffect (()=>{\n        fetch(\"https://pokeapi.co/api/v2/pokemon?limit=150\").then(r=>r.json()).then(data=>setPokemon({battlers:[],warriors:[],pokeList: data.results}))\n    },[])\n\n    function selectWarrior (name)\n    {\n        let selectedWarrior = pokemon.pokeList.filter(element => element.name === name)\n        let warriorList = [...pokemon.warriors, selectedWarrior[0]]\n        let removedFromCollection = pokemon.pokeList.filter(element=>element.name !== name)\n        setPokemon({battlers:[],warriors:[...warriorList],pokeList:[...removedFromCollection]})\n    }\n\n    function returnHome(name)\n    {\n        let remaining = pokemon.warriors.filter(element=>element.name !== name)\n        let removedCard = pokemon.warriors.filter(element=>  element.name === name)\n        setPokemon({battlers:[],warriors:[...remaining],pokeList:[...pokemon.pokeList, removedCard[0]]})\n    }\n    \n    while (pokemon.pokeList.length === 0) \n    {\n        return <img src='https://wallpaperaccess.com/full/215986.jpg' width=\"600\" height=\"500\" alt=\"splash screen\" />\n    }\n    \n    return (\n        <div style={{backgroundImage: 'url(https://pics.freeartbackgrounds.com/Desert_Sand_Texture-1203.jpg)', backgroundSize: `100%`, backgroundAttachment: 'fixed', height: '100vh'}}>\n            <nav>\n                <Chip component={NavLink} to='/BattleField' exact label=\"To BattleField\" clickable color=\"primary\" avatar={<Avatar alt=\"poke\" src=\"https://jenessa-reika.ca/wp-content/uploads/2020/04/pokemon4.png\" />}/>\n                <Chip component={NavLink} to='/PokemonContainer' exact label=\"Choose Your Warriors\" clickable color=\"primary\" avatar={<Avatar alt=\"poke\" src=\"https://jenessa-reika.ca/wp-content/uploads/2020/04/pokemon2.png\" />}/>\n            </nav>\n            <Warriors warriors={pokemon.warriors} pokeList={pokemon.pokeList} returnHome={returnHome} />\n            <Switch>\n                <Route path='/BattleField' component={() =><Router><BattleField winner={pokemon.winner} battlers={pokemon.battlers} warriors={pokemon.warriors} pokeList={pokemon.pokeList} setPokemon={setPokemon}/></Router>}/>\n                <Route path='/PokemonContainer' component={()=> <PokemonContainer pokeList={pokemon.pokeList} warriors={pokemon.warriors} selectWarrior={selectWarrior}/>} />\n            </Switch>\n        </div>\n    )\n}\n\nexport default Coliseum","import { Card } from '@material-ui/core'\n\nfunction HallOfFameCard ({name, id, position, wins}) {\n    return (\n        <Card variant=\"outlined\">\n        <h3 style={{fontFamily:'Cinzel'}}>{name.toUpperCase()}</h3>\n        <img src={position === 0 ?`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/${id}.png`:`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt={name} />\n        <br/>\n        <h4 style={{fontFamily:'Cinzel'}}>All-Time Wins: {wins}</h4>\n        </Card>\n    )\n\n}\nexport default HallOfFameCard","import {useState, useEffect} from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport HallOfFameCard from './HallOfFameCard';\n\nfunction HallOfFame() {\n\n    const [previousWinners, setPreviousWinners] = useState([])\n\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/battles`)\n        .then(res => res.json())\n        .then(data => setPreviousWinners(data))\n    }, [])\n\n    let simpleWinners = previousWinners.map(element=>{return {name: element.name, url: element.url}})\n\n    let winners = []\n    \n    simpleWinners.forEach(element=>{\n\n        if (!winners.some(winner=>winner.name === element.name))\n        {\n            winners.push({...element, wins: 1})\n        } else {\n            winners.find(({name}) => name === element.name ).wins++\n        }\n   \n    })\n\n   let sortedWinners = winners.sort((a,b) => {\n        if (a.wins < b.wins) {\n            return 1\n        }\n        if (a.wins > b.wins) {\n            return -1\n        } else {\n            return 0\n        }\n    })\n\n    let display = sortedWinners.map(element => \n            <Grid key={element.name} item xs={6} sm={3}>\n                <HallOfFameCard id={parseFloat(element.url.slice(34))} name={element.name} wins={element.wins}/>\n            </Grid>)\n\n    return (\n        <div style={{backgroundImage: `url(\"https://cdn2.bulbagarden.net/upload/8/8b/Hall_of_Fame_PO.png\")`, backgroundSize: `100%`, backgroundAttachment: 'fixed', backgroundPositionY: `65%`}}>\n        <h1 style={{fontFamily: 'Cinzel'}}>Hall of Fame!</h1>\n        <Grid container spacing={10}>\n            {display}\n        </Grid>\n        </div>\n    )\n}\n\nexport default HallOfFame","function Home()\n\n{\n    return (\n        <div style={{backgroundColor:'rgb(243, 202, 67)', height: '100vh'}}>\n            <br/>\n            <iframe style={{border:'10px solid'}} autoPlay={true} width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/rg6CiPI6h2g\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n        </div>\n    )\n}\n\nexport default Home;","\nimport '../App.css';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { Route, Switch } from 'react-router-dom'\nimport Header from './Header';\nimport Coliseum from './Coliseum';\nimport HallOfFame from './HallOfFame';\nimport Home from \"./Home\"\n\nfunction App()\n{\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n          <Route path='/Coliseum' component={()=><Router><Coliseum/></Router>}/>\n          <Route path='/HallOfFame' component={HallOfFame} />\n          <Route exactPath='/' component={Home}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Cinzel', 'sans-serif']\n  }\n});\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}